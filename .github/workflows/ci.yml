name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Cancel in-progress runs for the same workflow and ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript compiler
        run: npm run typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Verify build artifacts
        run: |
          test -f dist/index.js || (echo "ESM build missing" && exit 1)
          test -f dist/index.cjs || (echo "CJS build missing" && exit 1)
          test -f dist/index.d.ts || (echo "ESM types missing" && exit 1)
          test -f dist/index.d.cts || (echo "CJS types missing" && exit 1)
          test -f dist/cli.js || (echo "CLI binary missing" && exit 1)
          echo "✅ All build artifacts present"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/
          retention-days: 7

  test:
    name: Test (Node ${{ matrix.node-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        node-version: ['18', '20', '22']
        os: [ubuntu-latest, windows-latest, macos-latest]
        # Reduce matrix for PRs to speed up feedback
        exclude:
          - os: ${{ github.event_name == 'pull_request' && 'windows-latest' || 'none' }}
            node-version: '18'
          - os: ${{ github.event_name == 'pull_request' && 'macos-latest' || 'none' }}
            node-version: '18'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run --reporter=verbose

      - name: Generate coverage report (Node 20 + Ubuntu only)
        if: matrix.node-version == '20' && matrix.os == 'ubuntu-latest'
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-image-specs
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  test-package:
    name: Test Package Installation
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Pack package
        run: npm pack

      - name: Test package installation
        run: |
          mkdir -p /tmp/test-install
          cd /tmp/test-install
          npm init -y
          npm install ${{ github.workspace }}/image-specs-*.tgz

      - name: Test ESM import
        run: |
          cd /tmp/test-install
          node -e "import('image-specs').then(m => console.log('✅ ESM import works:', typeof m.getImageSpecs))"

      - name: Test CJS require
        run: |
          cd /tmp/test-install
          node -e "const { getImageSpecs } = require('image-specs'); console.log('✅ CJS require works:', typeof getImageSpecs)"

      - name: Test CLI binary
        run: |
          cd /tmp/test-install
          npx image-specs --version

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated dependencies
        run: npm outdated || true

  # Summary job to check if all required jobs passed
  ci-success:
    name: CI Success
    if: always()
    needs: [lint, typecheck, build, test, test-package, security]
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.typecheck.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.test-package.result }}" != "success" ]; then
            echo "❌ One or more required jobs failed"
            exit 1
          fi
          echo "✅ All CI checks passed successfully"
